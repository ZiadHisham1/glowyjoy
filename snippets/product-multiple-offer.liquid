<div style="width: 100%;" class="">
  <div class="">
    {% if product.available %}
     <form action="/cart/add" method="post" enctype="multipart/form-data" id="add-multiple-variants-form">
  <!-- First variant selector -->
  <div class="variant-selection">
    <label for="productSelect1">Choose Variant 1:</label>
    <select name="id1" id="productSelect1" class="product-single__variants">
      {% for variant in product.variants %}
        <option
          data-stocks="{{ variant.inventory_quantity }}"
          {% if variant == current_variant %}
          selected="selected"
          {% endif %}
          data-sku="{{ variant.sku }}"
          value="{{ variant.id }}">{{ variant.title }}</option>
      {% endfor %}
    </select>
    <label for="quantity1">Quantity:</label>
    <input type="number" name="quantity1" id="quantity1" value="1" min="1">
  </div>

  <!-- Second variant selector -->
  <div class="variant-selection">
    <label for="productSelect2">Choose Variant 2:</label>
    <select name="id2" id="productSelect2" class="product-single__variants">
      {% for variant in product.variants %}
        <option
          data-stocks="{{ variant.inventory_quantity }}"
          {% if variant == current_variant %}
          selected="selected"
          {% endif %}
          data-sku="{{ variant.sku }}"
          value="{{ variant.id }}">{{ variant.title }}</option>
      {% endfor %}
    </select>
    <label for="quantity2">Quantity:</label>
    <input type="number" name="quantity2" id="quantity2" value="1" min="1">
  </div>

  <button type="submit">Add to Cart</button>
</form>

    {% else %}
      <div>Out of stock</div>
    {% endif %}
  </div>
</div>

<script>
  function updateTotalPrice() {
    const comparePrice = {{ product.selected_or_first_available_variant.compare_at_price }};
    const productPrice = {{ product.selected_or_first_available_variant.price }};
    const quantity = 2;

    const totalComparePrice = (comparePrice * quantity) / 100;
    const totalProductPrice = (productPrice * quantity) / 100;

    document.getElementById('totalComparePrice').innerText = '$' + totalComparePrice.toFixed(2);
    document.getElementById('totalProductPrice').innerText = '$' + totalProductPrice.toFixed(2);
  }

  function toggleVisibility(selectedGroup) {
    const allSelectorDivs = document.querySelectorAll('[id^="selectorDiv-"]');
    allSelectorDivs.forEach(div => {
      if (div.id === `selectorDiv-${selectedGroup}`) {
        div.classList.remove('hidden');
      } else {
        div.classList.add('hidden');
      }
    });
  }

  // Initial call to update prices
  updateTotalPrice();

  document.addEventListener('DOMContentLoaded', function () {
    const containers = document.querySelectorAll('.box-cont');

    containers.forEach(container => {
      const group = container.getAttribute('data-group');
      const primaryRadio = container.querySelector(`#hidden-option-${group}`);
      const secondaryRadio = container.querySelector(`#quantity-option-${group}`);
      const card = document.getElementById(`box-cont-${group}`);

      primaryRadio.addEventListener('change', function () {
        if (this.checked) {
          // Remove the highlight class from all containers
          containers.forEach(cont => cont.classList.remove('highlight'));

          // Add the highlight class to the currently checked container
          card.classList.add('highlight');
          secondaryRadio.checked = true;

          // Toggle visibility
          toggleVisibility(group);
        }
      });

      secondaryRadio.addEventListener('change', function () {
        if (this.checked) {
          // Remove the highlight class from all containers
          containers.forEach(cont => cont.classList.remove('highlight'));

          // Add the highlight class to the currently checked container
          card.classList.add('highlight');
          primaryRadio.checked = true;
        }
      });
    });

    // Add highlight class to the first checked box
    const firstChecked = document.querySelector('.box-cont input[type="radio"]:checked');
    if (firstChecked) {
      const firstCheckedContainer = firstChecked.closest('.box-cont');
      if (firstCheckedContainer) {
        firstCheckedContainer.classList.add('highlight');
        const group = firstCheckedContainer.getAttribute('data-group');
        toggleVisibility(group);
      }
    }
  });
</script>


<style>
  .box-cont {
    display: block;
    margin: 10px;
    padding: 10px 30px 10px 10px;
    justify-content: space-between;
    /* background-color: #ced8ff; */
    border: solid 2px #02020230;
    border-radius: 2px;
    clip-path: inset(0 0 0);
  }
  .box-cont.highlight {
    background-color: #7575ff24;
  }
  .btn-cont {
    margin: 10px;
    padding: 10px;
  }
  .box .box-cont .carry-hld{
    width: 100%;
    display: flex;
    margin-bottom:10px;
    justify-content: space-between;
  }
  .box .box-cont .carry-hld .disc-opt-mun{
    width: 30px;
    display: inline-block;
    margin: 5px 30px 5px 15px;
    align-content: center;
    font-weight: 450;
    opacity: 0.7;
  }
  .box .box-cont .carry-hld .selection-div{
    width: 100%;
    margin-right: 5px;
    z-index: 30;
  }
  .box .box-cont .carry-hld .selection-div .disc-opt-selection{
    height: 45px;
    background-color: #fff;
    border-radius: 3px;
    border: solid thin #000;
  }
  .box .box-cont .hidden-option {
    position: absolute;
    width: 85%;
    height: 100%;
    margin: 0;
    cursor: pointer;
  }
  .box .box-cont .hidden-option input {
    width: 100%;
    height: 100%;
    position: absolute;
    z-index: 2;
    opacity: 0;
    cursor: pointer;
  }
  .box .box-cont .box-cont-holder {
    display: flex;
    align-items: center;
    min-width: 0px;
  }
  .box .box-cont .box-cont-holder div{
    display: flex;
    flex-direction: column;
    min-width: 0px;
  }
  .box .box-cont .box-cont-holder input {
    min-width: 18px;
    height: 18px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-right: 20px;
    border: 1px solid rgb(207, 98, 235);
  }
  .box .box-cont .box-cont-holder span {
    width:fit-content;
    background-color: #e15f00;
    border-radius: 4px;
    color: #fff;
    font-weight: 500;
    padding: 3px 10px 3px 11px;
  }
  .box .box-cont .box-cont-holder p {
    color: #000;
    font-size: 20px;
    font-weight: 600;
  }
  .moneyHolder {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    margin-left: 0;
  }
  .moneyHolder p {
    color: #bf5000;
    font-size: 20px;
    font-weight: 500;
  }
  .moneyHolder span {
    display: flex;
  }
  @media(max-width: 470px){
    .moneyHolder .individual-price, 
    .moneyHolder p,
    .box .box-cont .box-cont-holder span,
    .box .box-cont .box-cont-holder p{
      font-size: 15px;
      padding:0;
    }
  }
  .moneyHolder .individual-price {
    font-size: 20px;
  }
  .moneyHolder .discount-price,
  .moneyHolder .individual-price {
    justify-content: right;
  }
  .moneyHolder .individual-price div,
  .moneyHolder .discount-price div {
    padding: 0 5px 0 5px;
  }
  .old-price {
    text-decoration: line-through;
  }
  .new-price {
    color: blue;
  }
  .hidden{
    display: none;
  }
</style>
