<div class="row">
  <div class="column">
    <section class="beforeAndAfter-section">
      <div class="before-after-slider">
        <div class="slider-container">
          <div>
            {%- if section.settings.before_image -%}
            <img src="{{ section.settings.before_image | image_url: width: 512 }}" 
             loading="lazy" 
             width="{{ section.settings.before_image.width }}" 
             height="{{ section.settings.before_image.height }}" 
             alt="{{ section.settings.before_image.alt }}" 
             class="slider-image before-image" />
            {%- endif -%}
          </div>
          
          <div>
            {%- if section.settings.after_image -%}
            <img src="{{ section.settings.after_image | image_url: width: 512 }}" 
             loading="lazy" 
             width="{{ section.settings.after_image.width }}" 
             height="{{ section.settings.after_image.height }}" 
             alt="{{ section.settings.after_image.alt }}" 
             class="slider-image after-image" />
            {%- endif -%}
          </div>
          
          <div class="slider-handle"></div>
        </div>
      </div>
    </section>
  </div>
</div>

<style>
.beforeAndAfter-section{
  width: 100%;
  display: block;
}
.before-after-slider {
  position: relative;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
}

.slider-container {
  position: relative;
  width: 100%;
  overflow: hidden;
  height: 300px;
}

.slider-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: auto;
  display: block;
}

.after-image {
  clip: rect(0, 0, auto, 0);
}

.slider-handle {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 3px;
  height: 100%;
  background: #000;
  cursor: ew-resize;
  transform: translate(-50%, -50%);
  z-index: 10;
}
</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const beforeAfterSlider = document.querySelector('.before-after-slider');
  const sliderHandle = beforeAfterSlider.querySelector('.slider-handle');
  const afterImage = beforeAfterSlider.querySelector('.after-image');

  function updateSlider(xPosition) {
    const containerWidth = beforeAfterSlider.clientWidth;
    const offset = Math.max(0, Math.min(xPosition, containerWidth));
    afterImage.style.clip = `rect(0, ${offset}px, auto, 0)`;
    sliderHandle.style.left = `${offset}px`;
  }

  sliderHandle.addEventListener('mousedown', function(e) {
    function onMouseMove(e) {
      const rect = beforeAfterSlider.getBoundingClientRect();
      const offsetX = e.clientX - rect.left;
      updateSlider(offsetX);
    }

    document.addEventListener('mousemove', onMouseMove);
    document.addEventListener('mouseup', function() {
      document.removeEventListener('mousemove', onMouseMove);
    }, { once: true });
  });

  beforeAfterSlider.addEventListener('touchstart', function(e) {
    const touch = e.touches[0];
    function onTouchMove(e) {
      const touch = e.touches[0];
      const rect = beforeAfterSlider.getBoundingClientRect();
      const offsetX = touch.clientX - rect.left;
      updateSlider(offsetX);
    }

    document.addEventListener('touchmove', onTouchMove);
    document.addEventListener('touchend', function() {
      document.removeEventListener('touchmove', onTouchMove);
    }, { once: true });
  });
});
</script>

{% schema %}
{
  "name": "Section name",
  "settings": [
    {
      "type": "header",
      "content": "Before & After Settings"
    },
    {
      "type": "image_picker",
      "id": "before_image",
      "label": "Before Image"
    },
    {
      "type": "image_picker",
      "id": "after_image",
      "label": "After Image"
    }
  ],
  "presets": [
    {
      "name": "Before and After"
    }
  ]
}
{% endschema %}