<div class="row">
  <div class="column">
    <section class="howItFeels-section">
      <div class="framerBigHold">
        <div class="itemWraper">
          <div class="typoCnt">
            <h2>
              {{ section.settings.section_heading }}
            </h2>
            <p>
              {{ section.settings.section_desc }}
            </p>
          </div>
          <div class="gfHolder">
            {%- if section.settings.feelingGfImage -%}
            <img src="{{ section.settings.feelingGfImage | image_url: width: 600 }}" 
             loading="lazy" 
             width="{{ section.settings.feelingGfImage.width }}" 
             height="{{ section.settings.feelingGfImage.height }}" 
             alt="{{ section.settings.feelingGfImage.alt }}" 
             class="fellingGf" />
            {%- endif -%}
          </div>
        </div>
        
        <div class="cl-img-hld">
         
        </div>
      </div>
    </section>
  </div>
</div>

<style>
.howItFeels-section{
  width: 100%;
  display: block;
  {% if section.settings.select_bg_style == "backColor" %}
    background: {{ section.settings.backGcolor }};
  {% elsif section.settings.select_bg_style == "backImage" %}
    background-image: url('{{ section.settings.backImageUrl }}');
  {% endif %}
}
.framerBigHold{
  width: 80%;
  max-width: 1140px;
  margin: auto;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.typoCnt{
  max-width: 550px;
}
.typoCnt h2{
  color: {{ section.settings.heading_color }}!important;
  font-size: 40px !important;
  line-height: 1.2em !important;
  letter-spacing: -3px !important;
  text-transform: uppercase !important;
  font-weight: 400 !important;
  font-family: spaceBoard!important;
  padding: 20px 0 20px 0;
  text-align: inherit;
}
.typoCnt p{
  color: {{section.settings.desc_color}}!important;
  text-align: inherit;
  padding: 0 0 20px 0;
  line-height: 1.2;
  line-break: initial;
}
.cl-img-hld{
  margin: auto;
  margin-top: 30px;
  margin-bottom: 30px;
}
.gfHolder{
  position: relative;
  border-radius: 10px;
  width: 100%;
  height: 300px;
  overflow: hidden;
  margin: 20px 0 20px 0;
  box-shadow: 0 0 15px 4px #b07bfe99 !important;
}
.gfHolder img{
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transform: translate(-50%, -50%);
}
@media(max-width: 950px){
  .framerBigHold{
    display: block;
    padding:10px 0 10px 0;
  }
  .typoCnt{
    margin: auto;
  }
  .typoCnt h2{
    font-size: 25px!important;
    letter-spacing: 1px!important;
    text-align: center!important;
  }
  .typoCnt p{
    text-align: center;
  }
}
</style>

<script>
  const container = document.querySelector('.slider-container');
  const imageBefore = document.querySelector('.before-image');
  const line = document.querySelector('.slider-line');

  container.addEventListener('mousemove', e => {
    imageBefore.style.width = `${e.layerX}px`;
    line.style.left = `${e.layerX}px`;
  })
</script>

{% schema %}
{
  "name": "how it feels",
  "settings": [
    {
      "type": "header",
      "content": "how it feels Settings"
    },
    {
      "type": "select",
      "id": "select_bg_style",
      "label": "bachground style",
      "options": [
        {
          "value": "backColor", 
          "label": "background color"
        },
        {
          "value": "backImage", 
          "label": "background image"
        }
      ]
    },
    {
      "type": "color",
      "id": "backGcolor",
      "label": "background color"
    },
    {
      "type": "url",
      "id": "backImageUrl",
      "label": "background image url"
    },
    {
      "type": "image_picker",
      "id": "feelingGfImage",
      "label": "Before Image"
    },
    {
      "type": "text",
      "id": "section_heading",
      "label": "heading text"
    },
    {
      "type": "text",
      "id": "section_desc",
      "label": "heading text"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "heading color"
    },
    {
      "type": "color",
      "id": "desc_color",
      "label": "description color"
    }
  ],
  "presets": [
    {
      "name": "how it feels"
    }
  ]
}
{% endschema %}